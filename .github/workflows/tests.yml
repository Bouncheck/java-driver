name: Tests

on:
  push:
    branches: [ test-step-changes ]
  pull_request:
    branches: [ scylla-3.*x ]

jobs:
  run-unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Run unit tests
        run: mvn -B test

  run-cassandra-integration-tests:
    name: Run integration tests on Cassandra
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2


      - name: Fetch Scylla and Cassandra versions
        id: fetch-versions
        run: |
          pip3 install -r ci/requirements.txt
          echo "::set-output name=scylla-integration-tests-versions::$(python3 ci/version_fetch.py scylla-oss-stable:2 scylla-oss-rc scylla-enterprise-stable:2 scylla-enterprise-rc)"
          echo "::set-output name=cassandra-integration-tests-versions::$(python3 ci/version_fetch.py cassandra3-stable:1)"

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Setup python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Setup environment (Integration test on Cassandra 3.11.11)
        run: |
          pip3 install https://github.com/scylladb/scylla-ccm/archive/master.zip

      - name: Run integration tests on Cassandra 3.11.11
        run: mvn -B verify -Pshort -Dcassandra.version=3.11.11

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ccm-logs-cassandra-3.11.11
          path: /tmp/*-0/ccm*/node*/logs/*

    outputs:
      scylla-integration-tests-versions: ${{ steps.fetch-versions.outputs.scylla-integration-tests-versions }}
      cassandra-integration-tests-versions: ${{ steps.fetch-versions.outputs.cassandra-integration-tests-versions }}

  setup-integration-tests:
    name: Setup ITs
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Fetch Scylla and Cassandra versions
        id: fetch-versions
        run: |
          pip3 install -r ci/requirements.txt
          echo "::set-output name=scylla-integration-tests-versions::$(python3 ci/version_fetch.py scylla-oss-stable:2 scylla-oss-rc scylla-enterprise-stable:2 scylla-enterprise-rc)"
          echo "::set-output name=cassandra-integration-tests-versions::$(python3 ci/version_fetch.py cassandra3-stable:1)"

    outputs:
      scylla-integration-tests-versions: ${{ steps.fetch-versions.outputs.scylla-integration-tests-versions }}
      cassandra-integration-tests-versions: ${{ steps.fetch-versions.outputs.cassandra-integration-tests-versions }}

  cassandra-integration-tests:
    name: Cassandra ITs
    runs-on: ubuntu-latest
    needs: [setup-integration-tests]
    timeout-minutes: 90

    strategy:
      matrix:
        cassandra-version: ${{ fromJson(needs.setup-integration-tests.outputs.cassandra-integration-tests-versions) }}
      fail-fast: false

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Setup environment
        run: |
          free -mh
          ps -ww -o pid,user,%mem,command ax
          ps auxww
          ls /tmp
          pip3 install https://github.com/scylladb/scylla-ccm/archive/master.zip

      - name: Run integration tests on Cassandra (${{ matrix.cassandra-version }})
        run: mvn -B verify -Pshort -Dcassandra.version=3.11.11 -Dfmt.skip=true -Dclirr.skip=true -Danimal.sniffer.skip=true

      - name: Copy test results
        if: success() || failure()
        run: |
          free -mh
          ps -ww -o pid,user,%mem,command ax
          ps auxww
          ls /tmp
          shopt -s globstar
          mkdir cassandra-${{ matrix.cassandra-version }}
          cp --parents ./**/target/*-reports/*.xml cassandra-${{ matrix.cassandra-version }}/

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: "*/**/target/*-reports/*.xml"

      - name: Upload CCM logs
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ccm-logs-cassandra-${{ matrix.cassandra-version }}
          path: /tmp/*-0/ccm*/node*/logs/*
          
  run-scylla-integration-tests:
    name: Run integration tests on Scylla
    runs-on: ubuntu-latest

    strategy:
      matrix:
        scylla-version: ['4.4.4', '4.3.6']

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Setup environment (Integration test on Scylla ${{ matrix.scylla-version }})
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python-is-python3 python3-boto3
          sudo pip3 install https://github.com/scylladb/scylla-ccm/archive/master.zip
          sudo sh -c "echo 2097152 >> /proc/sys/fs/aio-max-nr"

      - name: Run integration tests on Scylla (${{ matrix.scylla-version }})
        run: mvn -B verify -Pshort -Dscylla.version=${{ matrix.scylla-version }}

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ccm-logs-scylla-${{ matrix.scylla-version }}
          path: /tmp/*-0/ccm*/node*/logs/*